{"version":3,"sources":["context/alertas/alertaContext.js","context/autenticacion/authContext.js","components/auth/Login.js","components/auth/NuevaCuenta.js","context/proyectos/proyectoContext.js","components/proyectos/NuevoProyecto.js","context/tareas/tareaContext.js","components/proyectos/Proyecto.js","components/proyectos/ListadoProyectos.js","components/layout/Sidebar.js","components/layout/Barra.js","components/tareas/FormTarea.js","components/tareas/Tarea.js","components/tareas/ListadoTareas.js","components/proyectos/Proyectos.js","context/proyectos/proyectoReducer.js","types/index.js","config/axios.js","context/proyectos/proyectoState.js","context/tareas/tareaReducer.js","context/tareas/tareaState.js","context/alertas/alertaReducer.js","context/alertas/alertaState.js","context/autenticacion/authReducer.js","config/tokenAuth.js","context/autenticacion/authState.js","components/rutas/RutaPrivada.js","App.js","index.js"],"names":["alertaContext","createContext","authContext","Login","props","useContext","AlertaContext","alerta","mostrarAlerta","AuthContext","mensaje","autenticado","iniciarSesion","useEffect","history","push","msg","categoria","useState","email","password","usuario","guardarUsuario","onChange","e","target","name","value","className","onSubmit","preventDefault","trim","htmlFor","type","id","placeholder","to","NuevaCuenta","registrarUsuario","nombre","confirmar","length","proyectoContext","NuevoProyecto","proyectosContext","formulario","errorformulario","mostrarFormulario","agregarProyecto","mostrarError","proyecto","guardarProyecto","onClick","tareaContext","Proyecto","proyectoActual","obtenerTareas","_id","ListadoProyectos","proyectos","obtenerProyectos","TransitionGroup","map","CSSTransition","key","timeout","classNames","Sidebar","Barra","usuarioAutenticado","cerrarSesion","FormTarea","tareasContext","tareaseleccionada","errortarea","validarTarea","agregarTarea","actualizarTarea","limpiarTarea","guardarTarea","tarea","Tarea","eliminarTarea","guardarTareaActual","cambiarEstado","estado","seleccionarTarea","ListadoTareas","eliminarProyecto","tareasproyecto","Proyectos","state","action","payload","filter","clienteAxios","axios","create","baseURL","process","REACT_APP_BACKEND_URL","ProyectoState","useReducer","projectoReducer","dispatch","a","get","resultado","data","post","proyectoId","delete","Provider","children","TareaState","TareaReducer","params","tareas","console","log","put","AlertaState","alertaReducer","setTimeout","localStorage","setItem","token","cargando","removeItem","tokenAuth","defaults","headers","common","AuthState","initialState","getItem","AuthReducer","datos","respuesta","response","RutaPrivada","Component","component","render","App","exact","path","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.0ca7aa1e.chunk.js","sourcesContent":["import {createContext} from 'react';\n\nconst alertaContext = createContext();\n\nexport default alertaContext;","import {createContext} from 'react';\n\n\nconst authContext = createContext();\n\nexport default authContext;","/* eslint-disable no-console */\nimport React, { useState, useContext, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport AlertaContext from '../../context/alertas/alertaContext';\nimport AuthContext from '../../context/autenticacion/authContext';\n\nconst Login = (props) => {\n\n    //* Extraer los valores del context\n    const alertaContext = useContext(AlertaContext);\n    const { alerta, mostrarAlerta } = alertaContext;\n\n    //* Extraer los valores y funciones de AuthContext\n    const authContext = useContext(AuthContext);\n    const { mensaje, autenticado, iniciarSesion } = authContext;\n    //* En caso de que el password o usuario no exista\n    useEffect(() => {\n        if (autenticado) {\n            props.history.push('/proyectos');\n        }\n\n        if (mensaje) {\n            mostrarAlerta(mensaje.msg, mensaje.categoria);\n        }\n        // eslint-disable-next-line\n    }, [mensaje, autenticado, props.history])\n\n    //State para iniciar sesion\n    const [usuario, guardarUsuario] = useState({\n        email: '',\n        password: ''\n    });\n\n    // extraer de usuario\n    const { email, password } = usuario;\n\n    const onChange = (e) => {\n        guardarUsuario({\n            ...usuario,\n            [e.target.name]: e.target.value\n        })\n    }\n\n    //cuando el usuario quiera iniciar sesion\n    const onSubmit = e => {\n        e.preventDefault();\n\n        //validar que no haya campos vacios\n        if (email.trim() === '' || password.trim() === '') {\n            mostrarAlerta('Todos los campos son obligatorios', 'alerta-error');\n        }\n        //pasarlo al action\n        iniciarSesion({ email, password });\n    }\n\n    return (\n        <div className=\"form-usuario\">\n            {alerta ? (<div className={`alerta ${alerta.categoria}`}> {alerta.msg} </div>) : null}\n            <div className=\"contenedor-form sombra-dark\">\n                <h1>Iniciar Sesion</h1>\n\n                <form\n                    onSubmit={onSubmit}\n                >\n                    <div className=\"campo-form\">\n\n                        <label htmlFor=\"email\">Email</label>\n                        <input\n                            type=\"email\"\n                            id=\"email\"\n                            name=\"email\"\n                            placeholder=\"Tu Email\"\n                            value={email}\n                            onChange={onChange}\n                        />\n                    </div>\n\n                    <div className=\"campo-form\">\n\n                        <label htmlFor=\"email\">Password</label>\n                        <input\n                            type=\"password\"\n                            id=\"password\"\n                            name=\"password\"\n                            placeholder=\"Tu Password\"\n                            value={password}\n                            onChange={onChange}\n                        />\n                    </div>\n\n                    <div className=\"campo-form\">\n                        <input type=\"submit\" className=\"btn btn-primario btn-block\" value=\"Iniciar \" />\n                    </div>\n                </form>\n\n                <Link to={'/nueva-cuenta'} className=\"enlace-cuenta\" >\n                    Obtener Cuenta\n                </Link>\n            </div>\n        </div>\n    );\n}\n\nexport default Login;","import React, { useState, useContext, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport AlertaContext from '../../context/alertas/alertaContext';\nimport AuthContext from '../../context/autenticacion/authContext';\n\nconst NuevaCuenta = (props) => {\n\n    //* Extraer los valores del context\n    const alertaContext = useContext(AlertaContext);\n    const { alerta, mostrarAlerta } = alertaContext;\n\n    //* Extraer los valores y funciones de AuthContext\n    const authContext = useContext(AuthContext);\n    const { mensaje, autenticado, registrarUsuario } = authContext;\n\n    //* en caso de que el usuario se haya autenticado o registrado o sea un registro duplicado\n    useEffect(() => {\n        if (autenticado) {\n            props.history.push('/proyectos');\n        }\n        if (mensaje) {\n            mostrarAlerta(mensaje.msg, mensaje.categoria);\n        }\n        // eslint-disable-next-line\n    }, [mensaje, autenticado, props.history]);\n\n    //*State para iniciar sesion\n    const [usuario, guardarUsuario] = useState({\n        nombre: '',\n        email: '',\n        password: '',\n        confirmar: ''\n    });\n\n    //* extraer  usuario\n    const { nombre, email, password, confirmar } = usuario;\n\n    const onChange = (e) => {\n        guardarUsuario({\n            ...usuario,\n            [e.target.name]: e.target.value\n        })\n    }\n\n    //*cuando el usuario quiera iniciar sesion\n    const onSubmit = e => {\n        e.preventDefault();\n\n        //*validar que no haya campos vacios\n        if (nombre.trim() === '' ||\n            email.trim() === '' ||\n            password.trim() === '' ||\n            confirmar.trim() === '') {\n            mostrarAlerta('Todos los campos son obligatorios', 'alerta-error');\n            return;\n        };\n        //*Password minimo de 6 caracteres\n        if (password.length < 6) {\n            mostrarAlerta('El password debe ser de al menos 6 caracteres', 'alerta-error');\n            return;\n        };\n        //*Los dos password sean iguales\n        if (password !== confirmar) {\n            mostrarAlerta('Los passwords no son iguales', 'alerta-error');\n            return;\n        };\n        //*pasarlo al action\n        registrarUsuario({\n            nombre,\n            email,\n            password\n        });\n\n    };\n\n    return (\n        <div className=\"form-usuario\">\n            {alerta ? (<div className={`alerta ${alerta.categoria}`}> {alerta.msg} </div>) : null}\n            <div className=\"contenedor-form sombra-dark\">\n                <h1>Obtener una cuenta</h1>\n\n                <form\n                    onSubmit={onSubmit}\n                >\n                    <div className=\"campo-form\">\n                        <label htmlFor=\"nombre\">Nombre</label>\n                        <input\n                            type=\"text\"\n                            id=\"nombre\"\n                            name=\"nombre\"\n                            placeholder=\"Tu Nombre\"\n                            value={nombre}\n                            onChange={onChange}\n                        />\n                    </div>\n\n                    <div className=\"campo-form\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input\n                            type=\"email\"\n                            id=\"email\"\n                            name=\"email\"\n                            placeholder=\"Tu Email\"\n                            value={email}\n                            onChange={onChange}\n                        />\n                    </div>\n\n                    <div className=\"campo-form\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input\n                            type=\"password\"\n                            id=\"password\"\n                            name=\"password\"\n                            placeholder=\"Tu Password\"\n                            value={password}\n                            onChange={onChange}\n                        />\n                    </div>\n\n                    <div className=\"campo-form\">\n                        <label htmlFor=\"confirmar\">Confirmar Password</label>\n                        <input\n                            type=\"password\"\n                            id=\"confirmar\"\n                            name=\"confirmar\"\n                            placeholder=\"Repite tu Password\"\n                            value={confirmar}\n                            onChange={onChange}\n                        />\n                    </div>\n\n                    <div className=\"campo-form\">\n                        <input type=\"submit\" className=\"btn btn-primario btn-block\" value=\"Registrarme\" />\n                    </div>\n                </form>\n\n                <Link to={'/'} className=\"enlace-cuenta\">\n                    Volver a Iniciar Sesión\n                </Link>\n            </div>\n        </div>\n    );\n}\n\nexport default NuevaCuenta;","import {createContext} from 'react'\n\n\nconst proyectoContext = createContext();\n\nexport default proyectoContext;","import React, {Fragment, useState, useContext} from 'react';\nimport proyectoContext from '../../context/proyectos/proyectoContext';\n\nconst NuevoProyecto = () => {\n\n    // Obtener el state del formulario\n    const proyectosContext = useContext(proyectoContext);\n    const {formulario, errorformulario, mostrarFormulario, agregarProyecto, mostrarError} = proyectosContext;\n\n\n    // State para Proyecto\n    const [proyecto, guardarProyecto] = useState({\n        nombre: ''\n    });\n\n    // Extraer nombre de proyecto\n    const {nombre} = proyecto;\n\n    // Lee los contenidos del input\n    const onChangeProyecto = e => {\n        guardarProyecto({\n            ...proyecto,\n            [e.target.name]: e.target.value\n        })\n    };\n\n    // Cuando el usuario envia un proyecto\n    const onSubmitProyecto = e => {\n        e.preventDefault();\n\n        // Validar el proyecto\n        if (nombre === '') {\n            mostrarError();\n            return;\n        }\n\n        // agregar al state\n        agregarProyecto(proyecto);\n\n        // Reiniciar el form\n        guardarProyecto({\n            nombre: ''\n        })\n    };\n\n    // Mostrar el formulario\n    const onClickFormulario = () => {\n        mostrarFormulario();\n    };\n\n    return (\n        <Fragment>\n            <button\n                type=\"button\"\n                className=\"btn btn-block btn-primario\"\n                onClick={onClickFormulario}\n            >Nuevo Proyecto\n            </button>\n\n            {formulario ?\n                (\n                    <form\n                        className=\"formulario-nuevo-proyecto\"\n                        onSubmit={onSubmitProyecto}\n                    >\n                        <input\n                            type=\"text\"\n                            className=\"input-text\"\n                            placeholder=\"Nombre Proyecto\"\n                            name=\"nombre\"\n                            value={nombre}\n                            onChange={onChangeProyecto}\n                        />\n\n                        <input\n                            type=\"submit\"\n                            className=\"btn btn-primario btn-block\"\n                            value=\"Agregar Proyecto\"\n                        />\n\n                    </form>\n                ) : null}\n\n            {errorformulario ? <p className=\"mensaje error\">El nombre del Proyecto es obligatorio</p> : null}\n        </Fragment>\n    );\n};\n\nexport default NuevoProyecto;","import { createContext} from 'react';\n\nconst tareaContext = createContext();\n\n\n\nexport default tareaContext;","import React, { useContext } from 'react';\nimport proyectoContext from \"../../context/proyectos/proyectoContext\";\nimport tareaContext from \"../../context/tareas/tareaContext\";\n\n\n\nconst Proyecto = ({ proyecto }) => {\n\n    // Obtener el state de proyectos\n    const proyectosContext = useContext(proyectoContext);\n    const { proyectoActual } = proyectosContext;\n\n    //Obtener la funcion del context de tarea\n    const tareasContext = useContext(tareaContext);\n    const { obtenerTareas } = tareasContext;\n\n\n    //funcion para agregar el proyecto actual\n    const seleccionarProyecto = id => {\n        proyectoActual(id); //Fijar un proyecto actual\n        obtenerTareas(id); //Filtrar las tareas cuando sse de click\n    }\n\n    return (\n        <li>\n            <button\n                type=\"button\"\n                className=\"btn btn-blank\"\n                onClick={() => seleccionarProyecto(proyecto._id)}\n            >{proyecto.nombre}</button>\n        </li>\n    );\n};\n\nexport default Proyecto;","import React, { useContext, useEffect } from 'react';\nimport Proyecto from \"./Proyecto\";\nimport proyectoContext from \"../../context/proyectos/proyectoContext\";\nimport AlertaContext from '../../context/alertas/alertaContext'\nimport { CSSTransition, TransitionGroup } from 'react-transition-group'\n\n\nconst ListadoProyectos = () => {\n\n    //*Extraer proyectos de state initial\n    const proyectosContext = useContext(proyectoContext);\n    const { mensaje, proyectos, obtenerProyectos } = proyectosContext;\n\n    //**Obtener alertas\n    const alertaContext = useContext(AlertaContext);\n    const { alerta, mostrarAlerta } = alertaContext;\n\n    //* Obtener proyectos cuando carga el componente\n    useEffect(() => {\n\n        //* Si hay un error\n        if (mensaje) {\n            mostrarAlerta(mensaje.msg, mensaje.categoria)\n        }\n        obtenerProyectos();\n        // eslint-disable-next-line\n    }, [mensaje]);\n\n    //*Revisar si proyectos tiene contenido\n    if (proyectos.length === 0) return <p>No hay proyectos, comienza creando uno</p>;\n\n\n    return (\n        <ul className=\"listado-proyectos\">\n\n            {alerta ? (<div className={`alerta ${alerta.categoria}`}>{alerta.msg}</div>) : null}\n\n            <TransitionGroup>\n                {proyectos.map(proyecto => (\n                    <CSSTransition\n                        key={proyecto._id}\n                        timeout={400}\n                        classNames=\"proyecto\"\n                    >\n                        <Proyecto\n                            proyecto={proyecto}\n                        />\n                    </CSSTransition>\n                ))}\n            </TransitionGroup>\n\n\n\n        </ul>\n    );\n};\n\nexport default ListadoProyectos;","import React from 'react'\nimport NuevoProyecto from \"../proyectos/NuevoProyecto\";\nimport ListadoProyectos from \"../proyectos/ListadoProyectos\";\n\nconst Sidebar = () => {\n    return (\n        <aside>\n            <h1>MERN<span>Tasks</span></h1>\n\n            <NuevoProyecto/>\n\n            <div className=\"proyectos\">\n                <h2>Tus Proyectos</h2>\n                <ListadoProyectos/>\n\n\n            </div>\n        </aside>\n    );\n};\n\nexport default Sidebar;","import React, { useContext, useEffect } from 'react';\nimport AuthContext from '../../context/autenticacion/authContext';\n\nconst Barra = () => {\n\n    //* Extraer la informacion de autenticacion\n    const authContext = useContext(AuthContext);\n    const { usuario, usuarioAutenticado, cerrarSesion } = authContext;\n\n    useEffect(() => {\n        usuarioAutenticado();\n        \n        // eslint-disable-next-line\n    }, []);\n\n\n    return (\n        <header className=\"app-header\">\n            {usuario ? <p className=\"nombre-usuario\">Hola <span>{usuario.nombre}</span></p> :null}\n            \n\n            <nav className=\"nav-principal\">\n                <button\n                className=\"btn btn-blank cerrar-sesion\"\n                onClick={() => cerrarSesion()}\n                >Cerrar sesion</button>\n            </nav>\n        </header>\n    );\n}\n\nexport default Barra;","import React, { useContext, useState, useEffect } from 'react';\nimport proyectoContext from \"../../context/proyectos/proyectoContext\";\nimport tareaContext from \"../../context/tareas/tareaContext\";\n\n\n\nconst FormTarea = () => {\n\n    //* Obtener si el proyecto esta activo\n    const proyectosContext = useContext(proyectoContext);\n    const { proyecto } = proyectosContext;\n\n    //* obtener la función del context de tarea\n    const tareasContext = useContext(tareaContext);\n    const { tareaseleccionada, errortarea, validarTarea, agregarTarea, obtenerTareas, actualizarTarea, limpiarTarea } = tareasContext;\n\n    //* Effect que detecta si hay una tarea seleccionada\n    useEffect(() => {\n        if (tareaseleccionada !== null) {\n            guardarTarea(tareaseleccionada);\n        } else {\n            guardarTarea({\n                nombre: ''\n            })\n        }\n    }, [tareaseleccionada]);\n\n    //* State del formulario \n    const [tarea, guardarTarea] = useState({\n        nombre: ''\n    })\n\n    //* Extraer el nombre del proyecto\n    const { nombre } = tarea;\n\n    //*Si no hay proyecto seleccionado\n    if (!proyecto) return null;\n\n    //*Array destructuring para extraer el proyecto actual\n    //* eslint-disable-next-line\n    const [proyectoActual] = proyecto;\n\n    //*Leer los valores del formulario\n    const handleChange = e => {\n        guardarTarea({\n            ...tarea,\n            [e.target.name]: e.target.value\n        })\n    }\n\n    const onSubmit = e => {\n        e.preventDefault();\n\n        //* Validar\n        if (nombre.trim() === '') {\n            validarTarea();\n            return;\n        }\n\n        //* Revisar si es edicion o es nueva tarea\n        if (tareaseleccionada === null) {\n\n            //* Agregar nueva tarea al state de tareas\n            tarea.proyecto = proyectoActual._id;\n            agregarTarea(tarea);\n            \n        }else{\n            //* actualizar tarea exitente\n            actualizarTarea(tarea);\n\n            //* Elimina tarea seleccionada del state \n            limpiarTarea();\n        }\n\n\n        //* Obtener y filtrar las tareas del proyecto actual\n        obtenerTareas(proyectoActual.id);\n\n\n        //* Reiniciar el form\n        guardarTarea({\n            nombre: ''\n        })\n    }\n\n    return (\n        <div className=\"formulario\">\n            <form\n                onSubmit={onSubmit}\n            >\n                <div className=\"contenedor-input\">\n                    <input\n                        type=\"text\"\n                        className=\"input-text\"\n                        placeholder=\"Nombre Tarea\"\n                        name=\"nombre\"\n                        value={nombre}\n                        onChange={handleChange}\n                    />\n                </div>\n\n                <div className=\"contenedor-input\">\n                    <input\n                        type=\"submit\"\n                        className=\"btn btn-primario btn-submit btn-block\"\n                        value={tareaseleccionada ? 'Editar Tarea' : \"Agregar Tarea\"}\n                    />\n                </div>\n            </form>\n            {errortarea ? <p className=\"mensaje error\">El nombre de la tarea es obligatorio</p> : null}\n        </div>\n    );\n}\n\nexport default FormTarea;","import React, { useContext } from 'react';\nimport proyectoContext from \"../../context/proyectos/proyectoContext\";\nimport tareaContext from \"../../context/tareas/tareaContext\";\n\n\nconst Tarea = ({ tarea }) => {\n\n    //* Obtener si el proyecto esta activo\n    const proyectosContext = useContext(proyectoContext);\n    const { proyecto } = proyectosContext;\n\n    //* obtener la función del context de tarea\n    const tareasContext = useContext(tareaContext);\n    const { eliminarTarea, obtenerTareas, actualizarTarea, guardarTareaActual } = tareasContext;\n\n\n    //* Extraer el proyecto\n    const [proyectoActual] = proyecto;\n\n    //* Funcion que se ejecuta cuando el usuario proesiona el btn de eliminar tarea\n    const tareaEliminar = id => {\n        eliminarTarea(id, proyectoActual._id);\n        obtenerTareas(proyectoActual.id);\n    }\n\n    //* Funcion que modifica el estado de las tareas\n    const cambiarEstado = tarea => {\n        if (tarea.estado) {\n            tarea.estado = false;\n        } else {\n            tarea.estado = true;\n        }\n        actualizarTarea(tarea);\n    }\n\n    //* Agrega una tarea actual cuando el usuario desea editarla\n    const seleccionarTarea = tarea => {\n        guardarTareaActual(tarea);\n    }\n\n    return (\n        <li className=\"tarea sombra\">\n            <p>{tarea.nombre}</p>\n\n            <div className=\"estado\">\n                {tarea.estado\n                    ?\n                    (\n                        <button\n                            type=\"button\"\n                            className=\"completo\"\n                            onClick={() => cambiarEstado(tarea)}\n                        >Completo</button>\n                    )\n\n                    :\n                    (\n                        <button\n                            type=\"button\"\n                            className=\"incompleto\"\n                            onClick={() => cambiarEstado(tarea)}\n                        >Incompleto</button>\n                    )\n                }\n            </div>\n\n            <div className=\"acciones\">\n                <button\n                    type=\"button\"\n                    className=\"btn btn-primario\"\n                    onClick={() => seleccionarTarea(tarea)}\n                >Editar</button>\n                {/* AGREGASTE LOS BOTONES DE LOS PROYECTOS MINUTO 2:51*/}\n                <button\n                    type=\"button\"\n                    className=\"btn btn-secundario\"\n                    onClick={() => tareaEliminar(tarea._id)}\n                >Eliminar</button>\n            </div>\n        </li>\n    );\n};\n\nexport default Tarea;","import React, { Fragment, useContext } from 'react';\nimport Tarea from './Tarea';\nimport proyectoContext from '../../context/proyectos/proyectoContext';\nimport tareaContext from '../../context/tareas/tareaContext';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\nconst ListadoTareas = () => {\n\n    // Extrar proyectos de state inicial\n    const proyectosContext = useContext(proyectoContext);\n    const { proyecto, eliminarProyecto } = proyectosContext;\n\n    // obtener las tareas del proyecto\n    const tareasContext = useContext(tareaContext);\n    const { tareasproyecto } = tareasContext;\n\n    // Si no hay proyecto seleccionado\n    if (!proyecto) return <h2>Selecciona un proyecto</h2>;\n\n    // Array destructuring para extraer el proyecto actual\n    const [proyectoActual] = proyecto;\n\n    // Elimina un proyecto\n    const onClickEliminar = () => {\n        eliminarProyecto(proyectoActual._id)\n    }\n\n    return (\n        <Fragment>\n            <h2>Proyecto: {proyectoActual.nombre} </h2>\n\n            <ul className=\"listado-tareas\">\n                {tareasproyecto.length === 0\n                    ? (<li className=\"tarea\"><p>No hay tareas</p></li>)\n                    :\n                    <TransitionGroup>\n                        {tareasproyecto.map(tarea => (\n                            <CSSTransition\n                                key={tarea._id}\n                                timeout={200}\n                                classNames=\"tarea\"\n                            >\n                                <Tarea\n                                    tarea={tarea}\n                                />\n                            </CSSTransition>\n                        ))}\n                    </TransitionGroup>\n                }\n            </ul>\n\n            <button\n                type=\"button\"\n                className=\"btn btn-eliminar\"\n                onClick={onClickEliminar}\n            >Eliminar Proyecto &times;</button>\n        </Fragment>\n    );\n}\n\nexport default ListadoTareas;","import React, {useContext, useEffect} from 'react';\nimport Sidebar from \"../layout/Sidebar\";\nimport Barra from \"../layout/Barra\";\nimport FormTarea from \"../tareas/FormTarea\";\nimport ListadoTareas from \"../tareas/ListadoTareas\";\nimport AuthContext from '../../context/autenticacion/authContext';\n\nconst Proyectos = () =>{\n\n    //* Extraer la informacion de autenticacion\n    const authContext = useContext(AuthContext);\n    const {usuarioAutenticado} = authContext;\n\n    useEffect(() => {\n        usuarioAutenticado();\n        \n        // eslint-disable-next-line\n    }, [])\n\n    return (\n        <div className=\"contenedor-app\">\n            <Sidebar />\n\n            <div className=\"seccion-principal\">\n\n                <Barra />\n\n                <main>\n                    <FormTarea />\n                    <div className=\"contenedor-tareas\">\n                    <ListadoTareas />\n                    </div>\n                </main>\n            </div>\n        </div>\n    );\n};\n\nexport default Proyectos;","import {\n    FORMULARIO_PROYECTO,\n    OBTENER_PROYECTOS,\n    AGREGAR_PROYECTO,\n    PROYECTO_ERROR,\n    VALIDAR_FORMULARIO,\n    PROYECTO_ACTUAL,\n    ELIMINAR_PROYECTO\n} from '../../types';\n\n\nexport default (state, action) => {\n    switch (action.type) {\n        case FORMULARIO_PROYECTO:\n            return {\n                ...state,\n                formulario: true\n            };\n        case OBTENER_PROYECTOS:\n            return {\n                ...state,\n                proyectos: action.payload\n            };\n        case AGREGAR_PROYECTO:\n            return {\n                ...state,\n                proyectos: [...state.proyectos, action.payload],\n                formulario: false,\n                errorformulario: false\n            };\n        case VALIDAR_FORMULARIO:\n            return {\n                ...state,\n                errorformulario: true\n            };\n        case PROYECTO_ACTUAL:\n            return {\n                ...state,\n                proyecto: state.proyectos.filter(proyecto => proyecto._id ===\n                    action.payload)\n            };\n        case ELIMINAR_PROYECTO:\n            return {\n                ...state,\n                proyectos: state.proyectos.filter(proyecto => proyecto._id !== action.payload),\n                proyecto: null\n            };\n        case PROYECTO_ERROR:\n            return{\n                ...state,\n                mensaje: action.payload\n            }\n        default:\n            return state;\n    }\n}","export const FORMULARIO_PROYECTO = 'FORMULARIO_PROYECTO';\nexport const OBTENER_PROYECTOS = 'OBTENER_PROYECTOS';\nexport const AGREGAR_PROYECTO = 'AGREGAR_PROYECTO';\nexport const VALIDAR_FORMULARIO = 'VALIDAR_FORMULARIO';\nexport const PROYECTO_ACTUAL = 'PROYECTO_ACTUAL';\nexport const ELIMINAR_PROYECTO = 'ELIMINAR_PROYECTO';\nexport const PROYECTO_ERROR = 'PROYECTO_ERROR';\n\nexport const TAREAS_PROYECTO = \"TAREAS_PROYECTO\";\nexport const AGREGAR_TAREA = \"AGREGAR_TAREA\";\nexport const VALIDAR_TAREA = 'VALIDAR_TAREA';\nexport const ELIMINAR_TAREA = 'ELIMINAR_TAREA';\nexport const TAREA_ACTUAL = 'TAREA_ACTUAL';\nexport const ACTUALIZAR_TAREA = 'ACTUALIZAR_TAREA';\nexport const LIMPIAR_TAREA = 'LIMPIAR_TAREA';\n\nexport const MOSTRAR_ALERTA = 'MOSTRAR_ALERTA';\nexport const OCULTAR_ALERTA = 'OCULTAR_ALERTA';\n\nexport const REGISTRO_EXITOSO = 'REGISTRO_EXITOSO';\nexport const REGISTRO_ERROR = 'REGISTRO_ERROR';\nexport const OBTENER_USUARIO = 'OBTENER_USUARIO';\nexport const LOGIN_EXITOSO = 'LOGIN_EXITOSO';\nexport const LOGIN_ERROR = 'LOGIN_ERROR';\nexport const CERRAR_SESION = 'CERRAR_SESION';\n","import axios from 'axios'\n\nconst clienteAxios = axios.create({\n    baseURL : process.env.REACT_APP_BACKEND_URL\n});\n\nexport default clienteAxios;","import React, { useReducer } from 'react';\n\nimport proyectoContext from './proyectoContext';\nimport projectoReducer from \"./proyectoReducer\";\nimport {\n    FORMULARIO_PROYECTO,\n    OBTENER_PROYECTOS,\n    AGREGAR_PROYECTO,\n    PROYECTO_ERROR,\n    VALIDAR_FORMULARIO,\n    PROYECTO_ACTUAL,\n    ELIMINAR_PROYECTO\n} from '../../types';\n\nimport clienteAxios from '../../config/axios'\n\nconst ProyectoState = props => {\n\n    const initialState = {\n        proyectos: [],\n        formulario: false,\n        errorformulario: false,\n        proyecto: null,\n        mensaje: null\n    };\n\n    //* Dispatch para ejecutar las acciones\n    const [state, dispatch] = useReducer(projectoReducer, initialState);\n\n    //*Serie de funciones para el CRUD\n    const mostrarFormulario = () => {\n        dispatch({\n            type: FORMULARIO_PROYECTO\n        })\n    };\n\n    //* Obtener los proyectos con DISPATCH\n    const obtenerProyectos = async () => {\n        try {\n            const resultado = await clienteAxios.get('/api/proyectos');\n\n            dispatch({\n                type: OBTENER_PROYECTOS,\n                payload: resultado.data.proyectos\n            })\n        } catch (error) {\n            const alerta = {\n                msg: 'Hubo un error',\n                categoria: 'alerta-error'\n            }\n            dispatch({\n                type: PROYECTO_ERROR,\n                payload: alerta\n            })\n        }\n    };\n\n    //*Agregar nuevo proyecto\n    const agregarProyecto = async proyecto => {\n        try {\n            const resultado = await clienteAxios.post('/api/proyectos', proyecto);\n            \n            //*Insertar el proyecto en el state\n            dispatch({\n                type: AGREGAR_PROYECTO,\n                payload: resultado.data\n            })\n        } catch (error) {\n            const alerta = {\n                msg: 'Hubo un error',\n                categoria: 'alerta-error'\n            }\n            dispatch({\n                type: PROYECTO_ERROR,\n                payload: alerta\n            })\n        }\n    };\n\n    //* Validar el formulario por errores\n    const mostrarError = () => {\n        dispatch({\n            type: VALIDAR_FORMULARIO\n        })\n    };\n\n    //*Seleccionar el Proyecto que el usuario dio click\n    const proyectoActual = (proyectoId) => {\n        dispatch({\n            type: PROYECTO_ACTUAL,\n            payload: proyectoId\n        })\n    };\n\n    //*Elimina un proyecto\n    const eliminarProyecto = async proyectoId => {\n        try {\n            await clienteAxios.delete(`/api/proyectos/${proyectoId}`);\n            dispatch({\n                type: ELIMINAR_PROYECTO,\n                payload: proyectoId\n            })\n        } catch (error) {\n            const alerta = {\n                msg: 'Hubo un error',\n                categoria: 'alerta-error'\n            }\n            dispatch({\n                type: PROYECTO_ERROR,\n                payload: alerta\n            })\n        }\n\n    };\n\n\n\n\n    return (\n        <proyectoContext.Provider\n            value={{\n                proyectos: state.proyectos,\n                formulario: state.formulario,\n                errorformulario: state.errorformulario,\n                proyecto: state.proyecto,\n                mensaje: state.mensaje,\n                mostrarFormulario,\n                obtenerProyectos,\n                agregarProyecto,\n                mostrarError,\n                proyectoActual,\n                eliminarProyecto\n\n            }}\n        >\n            {props.children}\n        </proyectoContext.Provider>\n\n    )\n};\n\nexport default ProyectoState","import {\n    TAREAS_PROYECTO,\n    AGREGAR_TAREA,\n    VALIDAR_TAREA,\n    ELIMINAR_TAREA,\n    TAREA_ACTUAL,\n    ACTUALIZAR_TAREA,\n    LIMPIAR_TAREA\n} from '../../types'\n\n\n\nexport default (state, action) => {\n    switch (action.type) {\n        case TAREAS_PROYECTO:\n            return {\n                ...state,\n                tareasproyecto: action.payload\n            }\n        case AGREGAR_TAREA:\n            return {\n                ...state,\n                tareasproyecto: [action.payload, ...state.tareasproyecto],\n                errortarea: false\n            }\n        case VALIDAR_TAREA:\n            return {\n                ...state,\n                errortarea: true\n            }\n        case ELIMINAR_TAREA:\n            return {\n                ...state,\n                tareasproyecto: state.tareasproyecto.filter(tarea => tarea._id !== action.payload )\n            }\n        case ACTUALIZAR_TAREA:\n            return {\n                ...state,\n                tareasproyecto: state.tareasproyecto.map(tarea => tarea._id === action.payload._id ? action.payload : tarea )\n            }\n        case TAREA_ACTUAL:\n            return {\n                ...state,\n                tareaseleccionada: action.payload\n            }\n        case LIMPIAR_TAREA:\n            return {\n                ...state,\n                tareaseleccionada: null\n            }\n        default:\n            return state;\n    }\n}","import React, { useReducer } from \"react\";\nimport TareaContext from \"./tareaContext\";\nimport TareaReducer from \"./tareaReducer\";\n\n\nimport {\n    TAREAS_PROYECTO,\n    AGREGAR_TAREA,\n    VALIDAR_TAREA,\n    ELIMINAR_TAREA,\n    TAREA_ACTUAL,\n    ACTUALIZAR_TAREA,\n    LIMPIAR_TAREA\n} from '../../types'\n\nimport clienteAxios from '../../config/axios'\n\nconst TareaState = props => {\n    const initialState = {\n        tareasproyecto: [],\n        errortarea: false,\n        tareaseleccionada: null\n    };\n\n    //*crear dispatch y state\n    const [state, dispatch] = useReducer(TareaReducer, initialState);\n\n\n    //* Crear las funciones \n\n    //* Obtener tareas de un proyecto\n    const obtenerTareas = async proyecto => {\n        \n        try {\n            const resultado = await clienteAxios.get('/api/tareas', {params: {proyecto}});\n            \n            dispatch({\n                type: TAREAS_PROYECTO,\n                payload: resultado.data.tareas\n            })\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    //* Agregar una tarea al proyecto seleccionado\n    const agregarTarea = async tarea => {\n        console.log(tarea);\n        try {\n            const resultado = await clienteAxios.post('/api/tareas', tarea);\n            console.log(resultado);\n            dispatch({\n                type: AGREGAR_TAREA,\n                payload: tarea\n    \n            });\n        } catch (error) {\n            console.log(error)\n        }\n        \n    }\n\n    //* VALIDA Y MUESTRA UN ERROR EN CASO DE QUE SEA NECESARIO\n    const validarTarea = () => {\n        dispatch({\n            type: VALIDAR_TAREA,\n\n        });\n    }\n\n    //* Eliminar por id\n    const eliminarTarea = async (id, proyecto) => {\n        try {\n            await clienteAxios.delete(`/api/tareas/${id}`, { params: { proyecto }});\n            dispatch({\n                type: ELIMINAR_TAREA,\n                payload: id\n            })\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    //* Edita o modifica una tarea\n    const actualizarTarea = async tarea => {\n        try {\n            const resultado = await clienteAxios.put(`/api/tareas/${tarea._id}`, tarea);\n            \n            dispatch({\n                type: ACTUALIZAR_TAREA,\n                payload: resultado.data.tarea\n            })\n        } catch (error) {\n            console.log(error);\n        }\n    }\n    //* Extrae una tarea  para edicion\n    const guardarTareaActual = tarea => {\n        dispatch({\n            type: TAREA_ACTUAL,\n            payload: tarea\n        })\n    }\n\n\n\n    //* Elimina la tarea seleccionada\n    const limpiarTarea = () => {\n        dispatch({\n            type: LIMPIAR_TAREA\n        })\n    }\n\n    return (\n        <TareaContext.Provider\n            value={{\n                tareasproyecto: state.tareasproyecto,\n                errortarea: state.errortarea,\n                tareaseleccionada: state.tareaseleccionada,\n                obtenerTareas,\n                agregarTarea,\n                validarTarea,\n                eliminarTarea,\n                guardarTareaActual,\n                actualizarTarea,\n                limpiarTarea\n            }}\n        >\n            {props.children}\n        </TareaContext.Provider>\n    );\n};\n\nexport default TareaState;\n","import { MOSTRAR_ALERTA, OCULTAR_ALERTA} from '../../types';\n\nexport default (state, action) => {\n    switch(action.type) {\n        case MOSTRAR_ALERTA:\n            return {\n                alerta: action.payload\n            }\n        case OCULTAR_ALERTA:\n            return {\n                alerta: null\n            }\n        default:\n            return state;\n    }\n}","import React, { useReducer } from 'react';\nimport alertaReducer from './alertaReducer';\nimport alertaContext from './alertaContext'\n\nimport { MOSTRAR_ALERTA, OCULTAR_ALERTA } from '../../types/index';\n\nconst AlertaState = props => {\n    const initialState = {\n        alerta: null\n    }\n\n    const [state, dispatch] = useReducer(alertaReducer, initialState);\n\n    //* Funciones\n    const mostrarAlerta = (msg, categoria) => {\n        dispatch({\n            type:  MOSTRAR_ALERTA,\n            payload: {\n                msg, \n                categoria\n            }\n        });\n\n        //* Después de 5 segundos limpiar la alerta \n        setTimeout(() => {\n            dispatch({\n                type: OCULTAR_ALERTA\n            })\n        }, 5000);\n    }\n\n    return (\n        <alertaContext.Provider\n            value={{\n                alerta: state.alerta,\n                mostrarAlerta\n            }}\n        > \n            {props.children}\n        </alertaContext.Provider>\n    )\n}\n\nexport default AlertaState;\n\n","import {\n    REGISTRO_EXITOSO,\n    REGISTRO_ERROR,\n    OBTENER_USUARIO,\n    LOGIN_EXITOSO,\n    LOGIN_ERROR,\n    CERRAR_SESION\n} from '../../types';\n\nexport default (state, action) => {\n    switch (action.type) {\n        case REGISTRO_EXITOSO:\n            case LOGIN_EXITOSO:\n            localStorage.setItem('token', action.payload.token);\n            return {\n                ...state,\n                autenticado: true,\n                mensaje: null,\n                cargando: false\n            }\n        case OBTENER_USUARIO:\n            return {\n                ...state,\n                autenticado: true,\n                usuario: action.payload,\n                cargando: false\n            }\n        case CERRAR_SESION:\n        case LOGIN_ERROR:\n        case REGISTRO_ERROR:\n            localStorage.removeItem('token');\n            return {\n                ...state,\n                token: null,\n                usuario: null,\n                autenticado: null,\n                mensaje: action.payload,\n                cargando: false\n            }\n        default:\n            return state;\n    }\n}","import clienteAxios from './axios';\n\nconst tokenAuth = token => {\n    if (token) {\n        clienteAxios.defaults.headers.common['x-auth-token'] = token;\n    } else {\n        delete clienteAxios.defaults.headers.common['x-auth-token'];\n    }\n}\n\nexport default tokenAuth;","import React, { useReducer } from 'react';\nimport AuthContext from './authContext';\nimport AuthReducer from './authReducer';\n\nimport clienteAxios from '../../config/axios';\nimport tokenAuth from '../../config/tokenAuth';\nimport {\n    REGISTRO_EXITOSO,\n    REGISTRO_ERROR,\n    OBTENER_USUARIO,\n    LOGIN_EXITOSO,\n    LOGIN_ERROR,\n    CERRAR_SESION\n} from '../../types';\n\n\nconst AuthState = props => {\n    const initialState = {\n        token: localStorage.getItem('token'),\n        autenticado: null,\n        usuario: null,\n        mensaje: null,\n        cargando: true\n    }\n\n    const [state, dispatch] = useReducer(AuthReducer, initialState);\n\n    //* Funciones \n\n    const registrarUsuario = async datos => {\n        try {\n\n            const respuesta = await clienteAxios.post('/api/usuarios', datos);\n            console.log(respuesta.data);\n\n            dispatch({\n                type: REGISTRO_EXITOSO,\n                payload: respuesta.data\n            });\n            //* Obtener el usuario\n            usuarioAutenticado();\n\n        } catch (error) {\n            // console.log(error.response.data.msg);\n            const alerta = {\n                msg: error.response.data.msg,\n                categoria: 'alerta-error'\n            }\n\n            dispatch({\n                type: REGISTRO_ERROR,\n                payload: alerta\n            })\n        }\n    }\n\n    //* Retorna el usuario autenticado\n    const usuarioAutenticado = async () => {\n        const token = localStorage.getItem('token');\n        if (token) {\n            tokenAuth(token);\n        }\n\n        try {\n\n            const respuesta = await clienteAxios.get('/api/auth');\n            \n            dispatch({\n                type: OBTENER_USUARIO,\n                payload: respuesta.data.usuario\n            })\n        } catch (error) {\n            console.log(error.response);\n            dispatch({\n                type: LOGIN_ERROR\n            })\n        }\n    }\n\n    //* Cuando el usuario inicia sesion\n    const iniciarSesion = async datos => {\n        try {\n            const respuesta = await clienteAxios.post('/api/auth', datos);\n            \n            dispatch({\n                type: LOGIN_EXITOSO,\n                payload: respuesta.data\n            });\n            //*Obtener el usuario\n            usuarioAutenticado();\n        } catch (error) {\n            console.log(error.response.data.msg);\n            const alerta = {\n                msg: error.response.data.msg,\n                categoria: 'alerta-error'\n            }\n\n            dispatch({\n                type: LOGIN_ERROR,\n                payload: alerta\n            })\n\n        }\n    }\n\n    //* Cierra la sesion del usuario\n    const cerrarSesion = () =>{\n        dispatch({\n            type: CERRAR_SESION,\n\n        })\n    }\n    return (\n        <AuthContext.Provider\n            value={{\n                token: state.token,\n                autenticado: state.autenticado,\n                usuario: state.usuario,\n                mensaje: state.mensaje,\n                cargando: state.cargando,\n                registrarUsuario,\n                iniciarSesion,\n                usuarioAutenticado,\n                cerrarSesion\n            }}\n        >\n            {props.children}\n        </AuthContext.Provider>\n    );\n}\n\nexport default AuthState;","import React, { useContext, useEffect } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport AuthContext from './../../context/autenticacion/authContext'\n\nconst RutaPrivada = ({ component: Component, ...props }) => {\n    const authContext = useContext(AuthContext);\n    const { autenticado, cargando, usuarioAutenticado } = authContext;\n\n    useEffect(() => {\n        usuarioAutenticado();\n        // eslint-disable-next-line\n    }, [])\n\n    return (\n        <Route {...props} render={props => !autenticado && !cargando ? (\n            <Redirect to=\"/\" />\n        ) : (\n                <Component {...props} />\n            )}\n\n        />\n    );\n}\n\nexport default RutaPrivada;","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Login from './components/auth/Login'\nimport NuevaCuenta from \"./components/auth/NuevaCuenta\";\nimport Proyectos from './components/proyectos/Proyectos';\n\nimport ProyectoState from './context/proyectos/proyectoState'\nimport TareaState from './context/tareas/tareaState'\nimport AlertaState from './context/alertas/alertaState'\nimport AuthState from './context/autenticacion/authState';\nimport tokenAuth from './config/tokenAuth';\nimport RutaPrivada from './components/rutas/RutaPrivada';\n\n//* Revisar si tenemos un token\nconst token = localStorage.getItem('token');\nif (token) {\n    tokenAuth(token)\n}\n\nfunction App() {\n\n    return (\n        <ProyectoState>\n            <TareaState>\n                <AlertaState>\n                    <AuthState>\n                        <Router>\n                            <Switch>\n                                <Route exact path=\"/\" component={Login} />\n                                <Route exact path=\"/nueva-cuenta\" component={NuevaCuenta} />\n                                <RutaPrivada exact path=\"/proyectos\" component={Proyectos} />\n                            </Switch>\n                        </Router>\n                    </AuthState>\n                </AlertaState>\n            </TareaState>\n        </ProyectoState>\n    );\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}